apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.20.0 (f3d54d784)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.20.0 (f3d54d784)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
    spec:
      containers:
        - args:
            - mysqld
            - --character-set-server=utf8
            - --collation-server=utf8_general_ci
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_ROOT_PASSWORD
            - name: SQL_PROVISION
              value: "CREATE DATABASE IF NOT EXISTS credentials;GRANT ALL ON credentials.* TO 'credentials001'@'%' IDENTIFIED BY 'password';CREATE DATABASE IF NOT EXISTS discovery;
                      GRANT ALL ON discovery.* TO 'discov001'@'%' IDENTIFIED BY 'password';
                      CREATE DATABASE IF NOT EXISTS ecommerce;
                      GRANT ALL ON ecommerce.* TO 'ecomm001'@'%' IDENTIFIED BY 'password';
                      CREATE DATABASE IF NOT EXISTS edxmktg;
                      GRANT ALL ON edxmktg.* TO 'edxmktg001'@'%' IDENTIFIED BY 'password';
                      CREATE DATABASE IF NOT EXISTS notes;
                      GRANT ALL ON notes.* TO 'notes001'@'%' IDENTIFIED BY 'password';
                      CREATE DATABASE IF NOT EXISTS edxapp;
                      CREATE DATABASE IF NOT EXISTS edxapp_csmh;
                      GRANT ALL ON edxapp.* TO 'edxapp001'@'%' IDENTIFIED BY 'password';
                      GRANT ALL ON edxapp_csmh.* TO 'edxapp001'@'%';
                      FLUSH PRIVILEGES;"
          image: mysql:5.6
          name: edx-devstack-mysql
          command: ["mysql"]
          args: ["-uroot mysql", "$(SQL_PROVISION)"]
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      hostname: mysql-devstack-edx
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
status: {}

